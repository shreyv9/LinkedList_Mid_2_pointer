   //This is the code of my first question which I solved on LeetCode. The question is to find the mid element of the LinkedList, I solved this using two pointer method
   //One more thing I have to do in this question is if the nodes are in even number then return the next node, so we can do it very easily.
   
   class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        if(head == NULL || head->next == NULL){
            return head;
        }
        ListNode* slow = head;
        ListNode* fast = head->next;
        
        while(fast!=NULL && fast->next!=NULL){
            slow = slow->next;
            fast = fast->next->next;
        }
        if(fast){
            return slow->next;
        } else{
        return slow;
        }
    }
};
